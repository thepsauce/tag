#!/bin/bash

set -Eeo pipefail
#set -o xtrace
shopt -s nullglob

err_handler() {
    [ ! -t 0 ] && while read -r f ; do
        echo "$f"
    done
}

trap 'err_handler' ERR

# > name
# > whether name exists
name_exists() {
    for t in [A-Z]*/ ; do
        [ -f "$t$1" ] && return 0 || true
    done
    [ -f "$1" ] && return 0 || true
    return 1
}

# < tag
# > whether tag exists
tag_exists() {
    [ "$1" = "${1^}" ] && [ -d "$1" ] && return
    echo "tag '$1' does not exist"
    return 1
}

# Retrieves all tags of a given name
# < name
# > real_file: real path of name
# > tags: tags of name
# > whether name exists
get_tags() {
    real_file=
    tags=()
    for t in [A-Z]*/ ; do
        [ -f "$t$1" ] || continue
        [ -L "$t$1" ] || real_file="$t$1"
        tags+=("${t:0:-1}")
    done
    [ ${#tags} -gt 0 ] && return 0
    [ -f "$1" ] && real_file="$1"
}

case "$1" in
    add|a)
        shift
        for t in "$@" ; do
            [ "$1" = "${1^}" ]
        done
        while read -r f ; do
            get_tags "$f"
            if [ ${#tags} -eq 0 ] ; then
                mv "$real_file" "$1/$f"
                echo "$f +nt $1" >&2
                for t in "${@:2}" ; do
                    [ -f "$t/$f" ] && continue || true
                    mkdir -p "$t"
                    ln -s "../$1/$f" "$t/$f"
                    echo "$f +t $t" >&2
                done
            else
                for t in "$@" ; do
                    [ -f "$t/$f" ] && continue || true
                    mkdir -p "$t"
                    ln -s "../$real_file" "$t/$f"
                    echo "$f +t $t" >&2
                done
            fi
            echo "$f"
        done
        ;;
    list)
        shift
        while read -r f ; do
            get_tags "$f"
            echo "$f : ${tags[*]}"
        done
        ;;
    remove|rm)
        shift
        for t in "$@" ; do
            [ "$1" = "${1^}" ]
        done
        while read -r f ; do
#            [ "$1" = "${1^}" ] || break
            get_tags "$f"
            detached=true
            for t in "$@" ; do
                [ -f "$t/$f" ] || continue
                echo "$f -t $t" >&2
                if [ -L "$t/$f" ] ; then
                    rm "$t/$f"
                else
                    detached=true
                    mv "$t/$f" ./
                fi
            done
            if $detached ; then
                if [ ${#tags[@]} -gt 0 ] ; then
                    mv "$f" "${tags[0]}/$f"
                    for t in "${tags[@]:1}" ; do
                        ln -fs "../${tags[0]}/$f" "$t/$f"
                    done
                fi
            fi
            echo "$f"
        done
        ;;
    move|mv)
        shift
        [ "$#" -eq 2 ]
        src="$1"
        dest="$2"
        get_tags "$src"
        ! name_exists "$dest"
        if [ ${#tags[@]} -eq 0 ] ; then
            mv "$src" "$dest"
        else
            new_real_file="$(dirname "$real_file")/$dest"
            mv "$real_file" "$new_real_file"
            for t in "${tags[@]}" ; do
                [ -f "$t/$dest" ] && continue
                ln -s "../$new_real_file" "$t/$dest"
                rm "$t/$src"
            done
        fi
        echo "$2"
        ;;
    *)
        for t in "$@" ; do
            tag_exists "$t"
        done

        tag="$1/"
        shift
        for f in "$tag"* ; do
            name="${f:${#tag}}"
            for t in "$@" ; do
                [ -f "$t/$name" ] || continue 2
            done
            echo "$name"
        done
        [ ! -t 0 ] && while read -r f ; do
            echo "$f"
        done || true
        ;;
esac

